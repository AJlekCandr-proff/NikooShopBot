import re

from aiogram.utils.keyboard import InlineKeyboardButton, InlineKeyboardBuilder, InlineKeyboardMarkup


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
class InlineKeyBoard:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä.
    –ö–Ω–æ–ø–∫–∏ –∏ —Å url, –∏ —Å callback_data. """

    Inline_markup = InlineKeyboardBuilder()

    __pattern = re.compile(
        r'^(?:http|ftp)s?://',
    )

    def __init__(self, *args: tuple[str, str]) -> None:
        self.buttons = args

    def __call__(self, rows: int) -> InlineKeyboardMarkup:
        """
        Dunder-–º–µ—Ç–æ–¥ –≤—ã–∑–æ–≤–∞ –∫–ª–∞—Å—Å–∞ –∫–∞–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.

        :param rows: –ö–æ–ª-–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.
        :return: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ InlineKeyboardMarkup.
        """

        self.Inline_markup = InlineKeyboardBuilder()

        for button in self.buttons:
            if self.check_url(button[1]):
                self.Inline_markup.add(
                    InlineKeyboardButton(
                        text=button[0], url=button[1],
                    ),
                )
            else:
                self.Inline_markup.add(
                    InlineKeyboardButton(
                        text=button[0], callback_data=button[1],
                    ),
                )
        return self.Inline_markup.adjust(rows).as_markup()

    @classmethod
    def check_url(cls, string: str) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ url.

        :param string: –ü—Ä–æ–≤–µ—Ä—è–µ–º–∞—è —Å—Ç—Ä–æ–∫–∞.
        :return: –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ True/False.
        """

        return bool(cls.__pattern.match(string))


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ InlineKeyBoard –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
MainMenu = InlineKeyBoard(
    *[
        ('–ö–∞—Ç–∞–ª–æ–≥ üõçÔ∏è', 'My_shop'),
        ('–ü—Ä–æ—Ñ–∏–ª—å üë§', 'Profile'),
        ('–û—Ç–∑—ã–≤—ã ‚≠êÔ∏è ', 'https://t.me/NikoooShopBot_otzivi'),
        ('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚öôÔ∏è', 'https://t.me/NikoooShopSupport'),
        ('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üîó', 'Invite'),
    ],
)


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ InlineKeyBoard –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é.
MenuKb = InlineKeyBoard(
    *[
        ('–ö—É–ø–∏—Ç—å üí≥', 'Buy'),
        ('–ù–∞–∑–∞–¥ üè†', 'back'),
        ('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†', 'main_menu'),
    ],
)


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ InlineKeyBoard –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
MenuProfileKb = InlineKeyBoard(
    *[
        ('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üí≥', 'set_balance'),
        ('–í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥ üéÅ', 'set_promocode'),
        ('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†', 'main_menu'),
    ],
)

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ InlineKeyBoard –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
AdminKb = InlineKeyBoard(
    *[
        ('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º üõçÔ∏è', 'edit_catalog'),
        ('–ü—Ä–æ–º–æ–∫–æ–¥—ã üéÅ', 'get_promo_codes'),
        ('–†–∞—Å—Å—ã–ª–∫–∞ üì£', 'send_letters'),
        ('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä', 'statistic'),
        ('–û—Ç–∑—ã–≤—ã ‚≠êÔ∏è ', 'https://t.me/NikoooShopBot_otzivi'),
        ('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†', 'main_menu'),
    ],
)


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ InlineKeyBoard –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.
EditPromoKb = InlineKeyBoard(
    *[
        ('–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ üéÅ', 'add_promo'),
        ('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ üóëÔ∏è', 'delete_promo'),
        ('–í –ø–∞–Ω–µ–ª—å üè†', 'panel'),
    ],
)


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ InlineKeyBoard –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
StatisticKb = InlineKeyBoard(
    *[
        ('–í –ø–∞–Ω–µ–ª—å üè†', 'panel'),
    ],
)
