# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π.
from aiogram import Router, F
from aiogram.types import CallbackQuery, BufferedInputFile, Message
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from .user.user_cmd_start import cmd_start
from ..bot_settings import bot, settings
from ..data_base.requests import MyRequests
from ..keyboards.inline_markup import InlineKeyBoard, MenuKb, MenuProfileKb


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞.
router = Router(name=__name__)


# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM.
class StatesCatalog(StatesGroup):
    """–•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM. """

    choice_game = State()
    choice_product = State()
    buy_product = State()
    get_email = State()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ö–∞—Ç–∞–ª–æ–≥ üõçÔ∏è".
@router.callback_query(F.data == 'My_shop')
async def category(callback: CallbackQuery, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ö–∞—Ç–∞–ª–æ–≥ üõçÔ∏è".\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ –∏–≥—Ä –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM 'choice_product' –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞.\n\n """

    await callback.message.delete()

    categories = await MyRequests.get_columns(table='Category', *['id', 'title_game'])

    category_kb = InlineKeyBoard(
        *[
            (game[1], f'game_{game[0]}') for game in categories

        ] + [
            ('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†', 'main_menu'),
        ],
    )

    await callback.message.answer_photo(
        photo=BufferedInputFile(
            file=open('app/media/Base/catalog.png', 'rb').read(),
            filename='catalog.png',
        ),
        caption='üéÆ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é üëáüèª',
        reply_markup=category_kb(rows=1),
    )

    await state.set_state(state=StatesCatalog.choice_game)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã.
@router.callback_query(F.data.startswith('game_'), StatesCatalog.choice_game)
async def send_catalog_game(callback: CallbackQuery, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å üë§".\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–≥—Ä—ã –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM 'choice_product' –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞.\n\n """

    await callback.message.delete()

    game = await MyRequests.get_line(table='Category', column_name='id', value=callback.data.split('_')[1])

    products: list[tuple] = await MyRequests.get_columns(table=f'{game.title_game}', *['id', 'Count', 'Product', 'Price'])

    product_kb = InlineKeyBoard(
        *[
            (
                f'{product[1] if int(product[1]) > 1 else " "} {product[2].replace("–ì–µ–º—ã", "–ì–µ–º–æ–≤") if "–ì–µ–º—ã" in product[2] else product[2]} | {product[3]} ‚ÇΩ',
                f'product_{product[0]}'
            )
            for product in products
        ] +
        [
            ('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†', 'main_menu'),
        ]
    )

    await callback.message.answer_photo(
        photo=BufferedInputFile(
            file=open('app/media/Base/catalog.png', 'rb').read(),
            filename='catalog.png',
        ),
        reply_markup=product_kb(rows=1),
    )
    await state.update_data(game=game.title_game)

    await state.set_state(state=StatesCatalog.choice_product)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞.
@router.callback_query(F.data.startswith('product_'), StatesCatalog.choice_product)
async def send_product(callback: CallbackQuery, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–≥—Ä–µ.\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–æ–≤–∞—Ä–µ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–æ–º,
    –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM "buy_product".\n\n """

    data = await state.get_data()
    game = data.get(__key='game')
    product_id = int(callback.data.split('_')[1])

    await callback.message.delete()

    product = await MyRequests.get_line(table=game, column_name='id', value=product_id)

    await callback.message.answer_photo(
        photo=BufferedInputFile(
            file=open(f'app/media/{game}/Product_{product_id}.png', 'rb').read(),
            filename='product.png',
            ),
        caption=f'‚úÖ –ü–æ–∫—É–ø–∫–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ {game} üéÆ\n\n'
                f'üì¶ –¢–æ–≤–∞—Ä: {product.Product}\n'
                f'üí∞ –¶–µ–Ω–∞: {product.Price} ‚ÇΩ\n\n',
        reply_markup=MenuKb(rows=1),
    )

    await state.update_data(price=product.Price, product=product.Product, count=product.Count)
    await state.set_state(state=StatesCatalog.buy_product)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å üí≥".
@router.callback_query(F.data == 'Buy', StatesCatalog.buy_product)
async def buy_product_game(callback: CallbackQuery, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å üí≥".\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –°–ø–∏—Å—ã–≤–∞–µ—Ç –¥–µ–Ω—å–≥–∏ —Å –±–∞–ª–∞–Ω—Å–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.
    –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º –±–∞–ª–∞–Ω—Å–µ,
    –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.\n\n """

    await callback.message.delete()

    data = await state.get_data()
    game = data.get('game')
    price = data.get('price')

    user = await MyRequests.get_line(table='Users', column_name='user_id', value=callback.from_user.id)

    if user.balance >= price:
        await MyRequests.update_items(
            table='Users',
            column_name='user_id',
            value=callback.from_user.id,
            balance=user.balance - price)

        await callback.message.answer(
            text='–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!)\n\n' 
                 f'–ù–∏–∂–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –ï-mail ‚úâÔ∏è –æ—Ç –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞(—É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏) –≤ {game} üëáüèª',
        )

        await state.set_state(state=StatesCatalog.get_email)

    else:
        await callback.message.answer_photo(
            photo=BufferedInputFile(
                file=open('app/media/Base/balance.png', 'rb').read(),
                filename='balance.png',
            ),
            caption=f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!\n\n'
                    f'üí∞ –ë–∞–ª–∞–Ω—Å: {user.balance} ‚ÇΩ\n\n',

            reply_markup=MenuProfileKb(rows=1),
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ e-mail –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
@router.message(StatesCatalog.get_email, F.text)
async def send_purchase(message: Message, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç –µ–≥–æ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞.
    –û—á–∏—â–∞–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM.\n\n """

    data: dict = await state.get_data()

    game = data.get(__key='game')
    price = data.get(__key='price')
    count = data.get(__key='count')
    product = data.get(__key='product')
    email = message.text
    user_id = message.from_user.id

    await message.answer(
        text='–û–ö. –ï—â–µ —Ä–∞–∑ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É ‚ù§Ô∏è\n'
             f'üì¶ –†–µ—Å—É—Ä—Å—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤–∞–º –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –≤ {game}... üïì\n\n'
             f'–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏/–ø—Ä–æ–±–ª–µ–º –∏ –ø—Ä–æ—á–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É - üëâüèª @NikoooShopSupport üëàüèª\n\n'
             f'C —É–≤–∞–∂–µ–Ω–∏–µ–º, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ @NikoooShop ü§ùüèª\n\n',
    )

    await bot.send_message(
        chat_id=settings.ADMIN_ID,
        text=f'üîî <i>–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞ üõç</i>\n\n'
             f'<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="tg:user?id={user_id}">{message.from_user.full_name}</a>\n'
             f'<b>üÜî Telegram:</b> <ins>{user_id}</ins>\n\n'
             f'<b>üéÆ –ò–≥—Ä–∞:</b> {game}\n'
             f'<b>‚úâÔ∏è E-mail –∞–¥—Ä–µ—Å:</b> <code>{email}</code>\n\n'
             f'<b>üì¶ –¢–æ–≤–∞—Ä:</b> {product}\n'
             f'<b>üìå –ö–æ–ª-–≤–æ:</b> {count}\n'
             f'<b>üí∞ –°—É–º–º–∞:</b> {price} ‚ÇΩ\n\n'
             f'@NikoooShopBot\n\n',
    )

    await cmd_start(message=message)

    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ üè†".
@router.callback_query(F.data == 'Back', StatesCatalog.buy_product)
async def back_to_menu(callback: CallbackQuery, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ üè†".\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–≥—Ä—ã.\n\n """

    await send_catalog_game(callback=callback, state=state)
