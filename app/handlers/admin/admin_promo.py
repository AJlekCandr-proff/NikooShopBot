import re

from aiogram import F, Router
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from app.utils.states_form import StatesAdmin
from app.views import msg_format_promo, msg_error_format_promo
from app.data_base.requests import MyRequests
from app.handlers.admin.admin_panel import cmd_admin
from app.keyboards.inline_markup import EditPromoKb, InlineKeyBoard


router = Router(name=__name__)


@router.callback_query(F.data == 'get_promo_codes')
async def send_promo_codes(callback: CallbackQuery) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–º–æ–∫–æ–¥—ã üéÅ".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ-–∫–æ–¥–æ–≤ –∏ –¥–µ–π—Å—Ç–≤–∏–π —Å –Ω–∏–º.

    :param callback: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.
    """

    await callback.message.delete()

    promo_codes = await MyRequests.get_columns(table='PromoCode', columns_name=['code', 'gift_sum', 'limit'])
    text = '\n'.join([f'üéÅ <code>{promo_codes[0]}</code> - <b>{promo_codes[1]} ‚ÇΩ</b> | –û—Å—Ç–∞–ª–æ—Å—å —à—Ç—É–∫: <b>{promo_codes[2]}</b> üîë' for promo_codes in promo_codes])

    await callback.message.answer(
        text='üîë –í—Å–µ –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–º–æ-–∫–æ–¥—ã üéÅ \n\n'
             f'{text}',
        reply_markup=EditPromoKb(rows=1),
    )


@router.callback_query(F.data == 'add_promo')
async def add_promo_code(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ üéÅ".
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

    :param callback: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    await callback.message.delete()

    await callback.message.answer(text=msg_format_promo())

    await state.set_state(state=StatesAdmin.get_promo)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–æ-–∫–æ–¥–∞.
@router.message(StatesAdmin.get_promo, F.text)
async def add_promo_code_into_db(message: Message, state: FSMContext) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–æ-–∫–æ–¥–∞.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏ –ø—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –µ–≥–æ - –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏
    –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∏–Ω–∞—á–µ
    –ø—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–Ω–æ–≤–∞.

    :param message: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Message.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    if re.fullmatch(r'^[\w+]+\s-+\s+\d+\s-+\s+\d+$', message.text):
        code = message.text.split()[0]
        gift_sum = float(message.text.split()[2])
        limit = int(message.text.split()[4])

        await MyRequests.add_items(table='PromoCode', code=code, gift_sum=gift_sum, limit=limit)

        await message.answer(text='‚úÖ –ü—Ä–æ–º–æ-–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω üéÅ')

        await cmd_admin(message=message)

        await state.clear()

    else:
        await message.answer(text=msg_error_format_promo())

        await state.set_state(state=StatesAdmin.get_promo)


@router.callback_query(F.data == 'delete_promo')
async def delete_promo_code(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ üóëÔ∏è".
    –ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –∏ –æ—Ç—Ä—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ "choice_promo".

    :param callback: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    promo_codes = await MyRequests.get_columns(table='PromoCode', columns_name=['code', 'id'])

    promo_code_kb = InlineKeyBoard(
        *[
            (f'{promo_code[0]}', f'promo_{promo_code[1]}') for promo_code in promo_codes
        ],
    )

    await callback.message.edit_text(
        text='üîë –í—ã–±–µ—Ä–∏ –ø—Ä–æ–º–æ–∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –¢—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å üëáüèª',
        reply_markup=promo_code_kb(rows=1),
    )

    await state.set_state(state=StatesAdmin.choice_promo)


@router.callback_query(F.data.startswith('promo_'), StatesAdmin.choice_promo)
async def delete_promo_code(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
    –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    :param callback: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    await MyRequests.delete_items(table='PromoCode', column_name='id', value=callback.data.split('_')[1])

    await callback.message.answer(text='‚úÖ –ü—Ä–æ–º–æ-–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω üéÅ')

    await state.clear()

    await cmd_admin(message=callback.message, user_id=callback.from_user.id)
