# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π.
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from .admin_panel import cmd_admin
from app.utils.send_messages import send_messages
from app.data_base.requests import MyRequests


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞.
router = Router(name=__name__)


# –ö–ª–∞—Å—Å FSM.
class States(StatesGroup):
    """–•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. """

    get_message = State()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–†–∞—Å—Å—ã–ª–∫–∞ üì£".
@router.callback_query(F.data == 'send_letters')
async def send_massage(callback: CallbackQuery, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–†–∞—Å—Å—ã–ª–∫–∞ üì£".\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –≤–≤–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM "get_message".\n\n """

    await callback.message.delete()

    await callback.message.answer(
        text=f'üñä <i><a href="tg:user?id={callback.from_user.id}">{callback.from_user.full_name}</a>,</i> '
             f'–Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ ‚úâÔ∏è',
    )

    await state.set_state(state=States.get_message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
@router.message(States.get_message)
async def get_massage(message: Message, state: FSMContext) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏.\n
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery –∏ FSMContext.\n
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-—Ä–∞—Å—Å—ã–ª–∫—É –∏ –æ—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM.\n\n """

    if message.text or message.caption:
        users: list[tuple[int]] = await MyRequests.get_columns('Users', *['user_id'])
        users: list[int] = [user[0] for user in users]
        text: str = message.text or message.caption

        if message.photo:
            await send_messages(ids=users, text=text, message=message, type_message='photo')

        elif message.video:
            await send_messages(ids=users, text=text, message=message, type_message='video')

        else:
            await send_messages(ids=users, text=text, message=message, type_message='text')

        await state.clear()

        await cmd_admin(message=message)

    else:
        await message.answer(
            text='‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n\n'
                 'üñä  –ù–∞–ø–∏—à–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ—â–µ –∏ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ ‚úâÔ∏è',
        )

        await state.set_state(state=States.get_message)
